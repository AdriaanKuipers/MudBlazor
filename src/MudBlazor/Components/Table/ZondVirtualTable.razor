@namespace MudBlazor
@typeparam T
@inherits MudTable<T>
@using Microsoft.AspNetCore.Components.Web.Virtualization
@using MudBlazor.Utilities

<div @attributes="UserAttributes" class="@Classname" style="@Style">
@if (Items != null || ServerData != null)
{
    <CascadingValue Value="TableContext" IsFixed="true">
        @if (ToolBarContent != null)
        {
            <MudToolBar Class="mud-table-toolbar">
                @ToolBarContent
            </MudToolBar>
        }
        @if (Context.SortLabels.Any())
        {
            <div Class="mud-table-smalldevices-sortselect">
                <MudSelect Value="@Context.CurrentSortLabel" Label="@SortLabel" ValueChanged="@(v => Context.SetSortFunc(v, override_direction_none: true))" T="MudTableSortLabel<T>">
                    @foreach (var label in Context.SortLabels)
                    {
                        <MudSelectItem Value="@label">@label.ChildContent</MudSelectItem>
                    }
                </MudSelect>
            </div>

        }
        <div class="mud-table-container" style="@TableStyle @(GetHorizontalScrollbarStyle())">
            <table class="mud-table-root">
                @if (ColGroup != null)
                {
                    <colgroup>
                        @ColGroup
                    </colgroup>
                }
                @if (HeaderContent != null || Columns != null)
                {
                    <thead class="@HeadClassname">
                        @if (CustomHeader)
                        {
                            @HeaderContent
                        }
                        else
                        {
                            <MudTHeadRow IsCheckable="MultiSelection">
                                @if (HeaderContent != null)
                                {
                                    @HeaderContent
                                }
                                
                                @if (Columns != null)
                                {
                                    <CascadingValue Value="MudBaseColumn.Rendermode.Header" Name="Mode">
                                        @Columns(Def)
                                    </CascadingValue>
                                }
                            </MudTHeadRow>
                        }
                    </thead>
                }
                <tbody class="mud-table-body">
                    @if (Loading)
                    {
                        <tr>
                            <td colspan="1000" class="@(CurrentPageItems.Count() > 0 || LoadingContent != null ? "mud-table-loading" : "")">
                                <MudProgressLinear Color="@LoadingProgressColor" Class="mud-table-loading-progress" Indeterminate="true" />
                            </td>
                        </tr>
                    }                    
                    else
                    {
                        @if (CurrentPageItems != null && CurrentPageItems.Count() > 0)
                        {
                            var rowIndex = 0;
                            <Virtualize ItemsProvider="@ItemsProvider" Context="item">
                               @{ var rowClass = new CssBuilder(RowClass).AddClass(RowClassFunc?.Invoke(item, rowIndex)).Build(); }
                               @{ var rowStyle = new StyleBuilder().AddStyle(RowStyle).AddStyle(RowStyleFunc?.Invoke(item, rowIndex)).Build(); }
                               <MudTr Class="@rowClass" Style="@rowStyle" Item="item" @key="item" IsCheckable="MultiSelection" IsEditable="IsEditable" 
                                      IsCheckedChanged="((value) => { var x = item; ZondOnRowCheckboxChanged(value, x); })">

                                   @if ((!ReadOnly) && IsEditable && object.Equals(_editingItem, item))
                                   {
                                        <CascadingValue Value="@Validator" IsFixed="true">
                                           @if(RowEditingTemplate != null)
										    {
											    @RowEditingTemplate(item)
										    }
										    @if (Columns != null)
										    {
											    <CascadingValue Value="MudBaseColumn.Rendermode.Edit" Name="Mode">
												    @Columns(item)
											    </CascadingValue>
										    }
                                        </CascadingValue>
                                   }
                                   else
                                   {
                                       if (RowTemplate != null)
										{
											@RowTemplate(item)
										}
										@if (Columns != null)
										{
											<CascadingValue Value="MudBaseColumn.Rendermode.Item" Name="Mode">
												@Columns(item)
											</CascadingValue>
										}
                                   }
                               </MudTr>
                               @if (ChildRowContent != null)
                               {
                                   @ChildRowContent(item)
                               }   
                               @{ rowIndex++; }
                            </Virtualize>
                        }
                    }
                    @if(!(CurrentPageItems != null && CurrentPageItems.Count() > 0)
                        && (Loading ? LoadingContent != null : NoRecordsContent != null)
                    )
                    {
                        <tr>
                            <th colspan="1000" class="mud-table-empty-row">
                                <div Class="my-3">
                                    @if(Loading)
                                    {
                                        @LoadingContent
                                    }
                                    else
                                    {
                                        @NoRecordsContent
                                    }
                                </div>
                            </th>
                        </tr>
                    }
                </tbody>
                @if (FooterContent != null || Columns != null)
                {
                    <tfoot class="@FootClassname">
                        @if (CustomFooter)
                        {
                            @FooterContent
                        }
                        else
                        {
                            <MudTFootRow IsCheckable="MultiSelection">
                                @if (@FooterContent != null)
                                {
                                    @FooterContent
                                }
                                @if (Columns != null)
                                {
                                    <CascadingValue Value="MudBaseColumn.Rendermode.Footer" Name="Mode">
                                        @Columns(Def)
                                    </CascadingValue>
                                }
                            </MudTFootRow>
                        }
                    </tfoot>
                }
            </table>
        </div>
    </CascadingValue>
}
</div>